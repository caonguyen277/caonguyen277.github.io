{"version":3,"sources":["component/RecipeDetails.js","component/Recipe.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeDetail","ingredients","map","ingredient","className","text","weight","uuidv4","Recipe","recipe","useState","show","setShow","label","image","url","src","alt","href","target","rel","onClick","RecipeDetails","Alert","alert","App","query","setQuery","recipes","setRecipes","setAlert","getData","a","Axios","get","result","data","more","hits","console","log","recipesfunc","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAmBeA,EAhBM,SAAC,GAClB,OADoC,EAAjBC,YACCC,KAAI,SAAAC,GACpB,OACI,qBAAoBC,UAAU,kBAA9B,UACI,oBAAIA,UAAU,kBAAd,SACCD,EAAWE,OACZ,qBAAID,UAAU,oBAAd,qBAECD,EAAWG,YALPC,mBCYNC,EAfA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACb,EAAuBC,oBAAS,GAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAsCH,EAAOA,OAAtCI,EAAP,EAAOA,MAAMC,EAAb,EAAaA,MAAMC,EAAnB,EAAmBA,IAAId,EAAvB,EAAuBA,YACvB,OACA,sBAAKG,UAAY,SAAjB,UACI,6BAAKS,IACL,qBAAKG,IAAKF,EAAOG,IAAKJ,IACtB,mBAAGK,KAAMH,EAAKI,OAAQ,QAAQC,IAAM,sBAApC,iBAGA,wBAAQC,QAAU,kBAAIT,GAASD,IAA/B,yBACCA,GAAQ,cAACW,EAAD,CAAerB,YAAeA,QCJhCsB,EARD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZ,OACI,qBAAKpB,UAAU,QAAf,SACI,6BAAKoB,OCuDFC,MAtDf,WACE,MAA0Bf,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcC,EAAd,KACA,EAA8BjB,mBAAS,IAAvC,mBAAOkB,EAAP,KAAgBC,EAAhB,KACA,EAA0BnB,mBAAS,IAAnC,mBAAOc,EAAP,KAAcM,EAAd,KAKMf,EAAG,0CAAsCW,EAAtC,mBAJM,WAIN,oBAFO,mCAEP,sDAEHK,EAAO,uCAAG,4BAAAC,EAAA,yDACA,KAAVN,EADU,iCAESO,IAAMC,IAAInB,GAFnB,WAENoB,EAFM,QAGDC,KAAKC,KAHJ,yCAIHP,EAAS,2BAJN,OAMZD,EAAWM,EAAOC,KAAKE,MACvBC,QAAQC,IAAIL,GACZL,EAAS,IACTH,EAAS,IATG,wBAWZG,EAAS,wBAXG,4CAAH,qDAsBPW,EAAcb,EAAQ1B,KAAI,SAACO,GAAD,OAC9B,cAAC,EAAD,CAAuBA,OAAQA,GAAlBF,kBAGf,OACE,sBAAKH,UAAU,MAAf,UACE,oBAAIiB,QAASU,EAAb,gCACA,uBAAM3B,UAAU,cAAcsC,SAXjB,SAACC,GAChBA,EAAEC,iBACFb,KASE,UACa,KAAVP,GAAgB,cAAC,EAAD,CAAOA,MAASA,IACjC,uBACEqB,KAAK,OACLC,YAAY,cACZC,aAAa,MACbC,SApBS,SAACL,GAChBhB,EAASgB,EAAExB,OAAO8B,UAqBd,uBAAOJ,KAAK,SAASI,MAAM,cAE7B,qBAAK7C,UAAU,UAAf,SAA0BqC,QC3CjBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bd46acf1.chunk.js","sourcesContent":["import React from 'react'\r\nimport {v4 as uuidv4} from 'uuid'\r\n\r\nconst RecipeDetail = ({ingredients}) => {\r\n    return  ingredients.map(ingredient => {\r\n        return (\r\n            <ul key={uuidv4()}  className=\"ingredient-list\">\r\n                <li className=\"ingredient-text\">\r\n                {ingredient.text}</li>\r\n                <li className=\"ingredient-weight\">\r\n                    Weight -\r\n                {ingredient.weight}</li>\r\n            </ul>\r\n        )\r\n    }\r\n        \r\n    )\r\n};\r\n\r\nexport default RecipeDetail;","import React,{useState} from \"react\";\r\nimport  RecipeDetails  from \"./RecipeDetails\";\r\n\r\nconst Recipe = ({recipe}) => {\r\n    const [show,setShow] = useState(false);\r\n    const {label,image,url,ingredients} = recipe.recipe;\r\n    return (\r\n    <div className = \"recipe\">\r\n        <h2>{label}</h2>\r\n        <img src={image} alt={label} />\r\n        <a href={url} target =\"_bank\" rel = \"noopener noreferrer\">\r\n            URL\r\n        </a>\r\n        <button onClick ={()=>setShow(!show)}>Ingredients</button>\r\n        {show && <RecipeDetails ingredients = {ingredients} />}\r\n    </div>\r\n)};\r\n\r\nexport default Recipe;","import React from 'react'\r\n\r\nconst Alert = ({alert}) => {\r\n    return (\r\n        <div className=\"alert\">\r\n            <h3>{alert}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport Recipe from \"./component/Recipe\";\nimport Alert from \"./component/Alert\";\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [alert, setAlert] = useState(\"\");\n  const APP_ID = \"7875ea50\";\n\n  const APP_KEY = \"dd772e53efa1f8d0f7615e4f8e28472e\";\n\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=10&calories=591-722&health=alcohol-free`;\n\n  const getData = async () => {\n    if (query !== \"\") {\n      const result = await Axios.get(url);\n      if(!result.data.more){\n        return setAlert('No food with such name');\n      }\n      setRecipes(result.data.hits);\n      console.log(result);\n      setAlert(\"\");\n      setQuery(\"\");\n    }else {\n      setAlert('Please fill the form');\n    }\n  };\n\n  const onChange = (e) => {\n    setQuery(e.target.value);\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getData();\n  };\n  const recipesfunc = recipes.map((recipe) => (\n    <Recipe key={uuidv4()} recipe={recipe} />\n  ));\n  \n  return (\n    <div className=\"App\">\n      <h1 onClick={getData}>Food Searching app</h1>\n      <form className=\"search-form\" onSubmit={onSubmit}>\n        {alert !== \"\" && <Alert alert = {alert}/>}\n        <input\n          type=\"text\"\n          placeholder=\"Search Food\"\n          autoComplete=\"off\"\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"search\" />\n      </form>\n      <div className=\"recipes\">{recipesfunc}</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}